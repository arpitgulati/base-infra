{
  "variables": {
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `source_ami`}}",
      "instance_type": "{{user `instance_type`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "ami_name": "{{user `ami_name`}}",
      "subnet_id": "{{user `subnet_id`}}",
      "security_group_id": "{{user `security_group_id`}}",
      "ami_regions": ["{{user `ami_regions`}}"],
      "tags": {
        "environment": "{{user `environment`}}",
        "ami_version": "{{user `ami_version`}}",
        "ancestor_ami_id": "{{user `ancestor_ami_id`}}"
      }
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sleep 10"
      ]
    },
    {
      "type": "file",
      "source": "ansible.cfg",
      "destination": "/tmp/ansible.cfg"
    },
    {
      "type": "shell",
      "inline": [
        "sudo mkdir /etc/ansible",
        "sudo cp /tmp/ansible.cfg /etc/ansible/",
        "sudo chmod a+r /etc/ansible/ansible.cfg"
      ]
    },
    {
      "type": "file",
      "source": "{{user `vault_password_file`}}",
      "destination": "/tmp/vault_pass.txt"
    },
    {
      "type": "shell",
      "scripts": "scripts/setup_ansible.sh"
    },
    {
      "type": "ansible-local",
      "playbook_dir": ".",
      "playbook_file": "setup.yml",
      "inventory_file": "./inventory/{{user `environment`}}",
      "extra_arguments": [
        "--vault-password-file={{user `vault_password_file`}}",
        "--skip-tags {{user `ansible_skip_tags`}}",
        "--extra-vars aws_region={{user `aws_region`}}",
        "--verbose"
      ]
    },
    {
      "type": "file",
      "source": "test",
      "destination": "/tmp"
    }
  ]
}