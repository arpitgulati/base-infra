- name: Install required system packages.
  become: true
  apt: pkg={{ item }} state=present
  with_items:
    - fail2ban
    - iptables-persistent
    
- name: Ensure fail2ban service is stopped
  become: true
  service: name=fail2ban state=stopped

- name: Check if ufw exists
  become: true
  stat: path=/etc/init/ufw.conf
  register: ufw_status

- name: Stop ufw service, if it exists
  become: true
  service: name=ufw state=stopped
  when: ufw_status.stat.exists

- name: Creates empty directory for iptables
  become: true
  file: path=/etc/iptables state=directory

- name: Preconfigure default values for iptables-peristent
  become: true
  debconf: name=iptables-persistent question={{ item }} vtype=boolean value=true
  with_items:
    - iptables-persistent/autosave_v4
    - iptables-persistent/autosave_v6

- name: Reconfigure iptables-persistent pre-selected values
  become: true
  command: dpkg-reconfigure --frontend noninteractive iptables-persistent

- name: Start ufw service, if is exists
  become: true
  service: name=ufw state=started
  when: ufw_status.stat.exists

- name: Copy slack-notify.conf to remote host
  become: true
  template: src=slack-notify.conf
            dest=/etc/fail2ban/action.d/slack-notify.conf
            backup=yes

- name: Copy slack-notify.sh to remote host
  become: true
  template: src=slack-notify.sh
            dest=/etc/fail2ban/action.d/slack-notify.sh
            backup=yes

- name: Copy sshd.conf to remote host for ubuntu 14.04
  become: true
  template: src=sshd.conf.ubuntu14_04
            dest=/etc/fail2ban/filter.d/sshd.conf
            backup=yes
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04"
  
- name: Copy sshd.conf to remote host for ubuntu 16.04
  become: true
  template: src=sshd.conf.ubuntu16_04
            dest=/etc/fail2ban/filter.d/sshd.conf
            backup=yes
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "16.04"


- name: Load jail.local to remote host for ubuntu 14.04
  become: true
  template: src=jail.local.ubuntu14_04
            dest=/etc/fail2ban/jail.local
            backup=yes
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "14.04"

- name: Load jail.local to remote host for ubuntu 16.04
  become: true
  template: src=jail.local.ubuntu16_04
            dest=/etc/fail2ban/jail.local
            backup=yes
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "16.04"

- name: Start fail2ban
  become: true
  service: name=fail2ban state=started
  